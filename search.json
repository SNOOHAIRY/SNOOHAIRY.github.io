[{"title":"类中成员的类型","url":"/2020/04/27/类中成员的类型/","content":"\n### public（公有类型成员）\n\n在关键字public后面声明，她们是类与外部的接口，任何外部函数都可以访问共有类型数据和函数。\n\n### private（私有类型成员）\n\n在关键字private后面声明，只能允许本类中的函数访问，而类外部的任何函数都不能访问。\n\n如果紧跟在类名称的后面声明私有成员，则关键字private可以省略。（也就是**在缺省的情况下，成员类型为私有**）\n\n```c++\nclass A{\n\tint a; //此时a为私有成员\n\tpublic:\n\tint b;\n\tchar c; //b,c为共有成员\n}\n```\n\n### protect （保护类型成员）\n\n","tags":["C++"],"categories":["C++"]},{"title":"面试题03. 数组中重复的数字","url":"/2020/04/26/面试题03.-数组中重复的数字/","content":"\n## [面试题03. 数组中重复的数字](https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/)\n\n### 题目描述\n\n找出数组中重复的数字。\n\n在一个长度为 n 的数组 `nums` 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。\n\n**示例 1：**\n\n```\n输入：\n[2, 3, 1, 0, 2, 5, 3]\n输出：2 或 3 \n```\n\n**限制：**\n\n```\n2 <= n <= 100000\n```\n\n题目出自`《剑指offer(第二版)》`\n\n### 题目解析\n\n最直接的解法就是创建一个大小相同的记录数组，因为数组中的数字均有范围，即可适用哈希来进行标注。讲出现过的数字对应的下表标注是否出现过，若遍历过程中出现了，则直接返回结果。\n\n```c++\nclass Solution {\npublic:\n    int findRepeatNumber(vector<int>& nums) {\n        bool flag[nums.size()];\n        memset(flag,false,sizeof(flag));\n        for(int i=0;i<nums.size();i++){\n            if(flag[nums[i]]) return nums[i];\n            else flag[nums[i]]=true;\n        }\n        return -1;\n    }\n};\n```\n\n","tags":["题解","leetcode"],"categories":["题解"]},{"title":"指令系统","url":"/2020/04/23/指令系统/","content":"\n## 一.指令系统的发展和性能要求\n\n### 1.指令系统的发展\n\n#### (1)指令（机器指令）的定义\n\n​\t是指要求计算机执行某种操作的命令，是计算机硬件能够直接识别和执行的二进制机器代码，又称机器指令。\n\n#### (2)指令系统\n\n​\t一台计算机的所有的指令结合成为该机的指令系统和指令集。\n\n#### (3)系统计算机\n\n​\t是指具有相同的基本指令系统和基本体系结构，但具有不同组合和实现的一系列不同型号的机器。\n\n\n\n### 2.一条指令应包含如何信息：\n\n#### \t(1)进行何种操作\n\n​\t\t即操作性质。体现再指令中被成为**操作码**。\n\n#### \t(2)操作的对象\n\n​\t\t数据来源以及如何寻找操作数。体现在指令中被成为**地址码**。\n\n#### \t(3)操作的结果\n\n​\t\t指令操作结果存放何处。\n\n#### \t(4)下一条指令定位 \n\n​\t\t下一条指令的起始地址，一般由PC指示 `只有跳转指令需要`\n\n​\t\t**program count** (程序计数器 PC=？)\n\n### 3.对指令系统性能的要求\n\n#### \t完备性\n\n​\t\t指要求指令系统功能完备\n\n#### \t有效性\n\n\n\n#### \t规整性\n\n​\t\t包括对称性、匀齐性、指令格式和数据格式的一致性。\n\n​\t\n\n## ⭐二.指令格式\n\n### 1.地址码\n\n按地址码的多少，指令一般可以分为（固定操作码长）：\n\n#### 🟤三地址指令 \n\n​\tOP A1 A2 A3\n\n[^OP]: 指令集\n[^A1 A2 A3]: 地址\n\n​\t指令功能一： A1 OP A2->A3\n\n#### 🟤二地址指令 \n\n​\tOP A1 A2\n\n#### 🟤一地址指令 \n\n​\tOP A1 \n\n#### 🟤零地址指令\n\n​\tOP","tags":["随堂笔记","计算机组成原理"],"categories":["计算机组成原理"]},{"title":"Typora使用笔记","url":"/2020/04/23/Typora使用笔记/","content":"\n## 1.更改字体以及展示宽度\n\n新建一个`github.user.css`文件，然后输入：以下代码即可，注意：默认主题为github主题，该文件代表覆盖github主题，进一步的自定义可以参考[Typora官方主题文档](http://theme.typora.io/doc/)\n\n```\n/* 默认字体替换为微软雅黑 */\nbody {\n    font-family: \"Microsoft YaHei\";\n}\n \n/* 默认表格字体改为等宽字体 */\ntable {\n    font-family: Consolas;\n}\n \n/* 编辑界面最大宽度设置为自适应 */\n#write{\n    max-width: 90%;   \n}\n\n/* 源码界面最大宽度设置为自适应 */\n#typora-source .CodeMirror-lines {\n   max-width: 90%;\n}\n```\n\n这一步的参考博客为[使用第三方Markdown编辑器编辑为知笔记](https://www.jianshu.com/p/e1baaea15458)\n\n## 2. Typora的快捷键\n\n由于使用的是Markdown语法，所以Markdown的格式这里均适用\n\n**\n\n| 操作                     | 快捷键                                                   |\n| ------------------------ | -------------------------------------------------------- |\n| 表格                     | CTRL+T 即可弹出窗口，选择几行几列就可创建表格            |\n| 字体加粗                 | 直接选中CTRL+B  or  ** **里面的字体即为加粗格式          |\n| 代码块                   | CTRL+SHIFT+K  or  ``` 后面再加上同样的符号即为结束代码块 |\n| 引用                     | >                                                        |\n| 指向链接（Markdown语法） | `[]()`第一个方括号里面填文字，第二个圆括号里填写链接     |\n\n...此处省略一堆快捷键，有时间再更新😀\n\n## 3. 模式选择\n\n> 1.**打字机模式（Typewriter Mode)**：光标置于屏幕中央\n>\n> 2.**沉浸模式（Focus Mode）**：除了书写行，其余行变暗\n\n🍳模式选择在视图(view)中可以找到\n\n## 4.导出文件\n\n我用得最多的当然是原始的.md格式的文件，但是出于好奇心我点了导出为word，在Typora的指引下去[pandoc的GitHub网址](https://github.com/jgm/pandoc/releases/tag/2.9.2.1)下载了pandoc。\n\n这时候问题来了，我明明按照指引安了pandoc,但是我要导出.docx文件的时候还是提醒我去下载。于是乎，我打开了命令行cmd，在安装的目录下输入\n\n```\npandoc --help\n```\n\n然后下面是一大堆的操作帮助，再打开pandoc的时候就忽然可以顺利导出word了。\n\n📢显然效果很好，出乎我的意料，夸！","tags":["Typora"],"categories":["Typora"]},{"title":"类的友元","url":"/2020/04/22/类的友元/","content":"\n## 一 .\t友元关系（friend）\n\n### 1.\t为什么会有友元关系\n\n类中私有和保护的成员在类外不能被访问。而若是想在类B中嵌入类A的对象，此时B的成员函数是无法直接访问A的私有成员的。从数据安全的角度来说，这无疑是最安全的，因为内嵌的部件相当于一个黑盒。\n\n其中的不便显而易见：下列例子实现形式就会出现编译错误。\n\n```c++\nvoid B::set(int i){\n\ta.x=i;\n}\n```\n\n这时候，友元函数就体现出了它的作用。先来看看**友元关系**是啥?\n\n### 2.\t友元关系能实现什么\n\n友元关系提供了不同类和对象的成员函数之间、类的成员函数与一般函数之间进行数据共享的机制。**也就是说，通过友元关系，一个普通函数或者类的成员函数可以访问封装于另一个类中的数据。**虽然这是对数据隐蔽和封装的破坏，但这实现了数据的共享。\n\n在类中，用关键字**friend**将函数或类声明为友元。友元是一般函数或类的成员函数，称为友元函数；是类，则成为友元类，**友元类的所有成员函数都自动成为友元函数。**\n\n### 3. \t友元关系如何声明\n\n声明一般格式为:\n\n```c++\nfriend <type> FuncName(<args>);\n```\n\n友元函数不是成员函数，用法和普通函数完全一致。\n\n","tags":["随堂笔记","C++"],"categories":["C++"]},{"title":"关系代数和SQL课堂测试","url":"/2020/04/20/关系代数和SQL课堂测试/","content":"\n### 第一关\n{% post_link 关系代数和SQL课堂测试第一关 %}\n### 第二关\n{% post_link 关系代数和SQL课堂测试第二关 %}\n### 第三关\n{% post_link 关系代数和SQL课堂测试第三关 %}\n### 第四关\n{% post_link 关系代数和SQL课堂测试第四关 %}\n","tags":["数据库","题解汇总"],"categories":["homeword"]},{"title":"安装好的hexo发布本地博客到GitHub","url":"/2020/04/19/安装好的hexo发布本地博客到GitHub/","content":"\nWelcome to [My blogs](https://SNOOHAIRY.github.io/)!\n\n注意，以下的每一步操作都在你的本地博客文件目录下执行\n\n## [Hexo](https://hexo.io/zh-cn/)预览本地博客文件\n\n### 预览本地博客 \n调用cmd在命令行输入hexo安装的位置 再输入命令\n\n```bash\nhexo s -p 1234\n```\n这里的1234是本地地址，可以通过浏览器访问：http://localhost:1234 通过编写本地.md文件，保存之后刷新浏览器即可看到预览效果。\n\n当然如果选择自己的本地博客目录在空白处右键选择 Git Bash Here,输入\n```bash\nhexo s\n```\n就会分配一个默认的地址 http://localhost:4000 ,复制到浏览器也可浏览\n\n### 关于hexo的配置过程 稍后更新。\n\n## [Hexo](https://hexo.io/zh-cn/)发布本地博客到GitHub\n\n如果打开了本地预览要先关闭本地预览文件（ctrl+c），然后在命令行中敲入\n```bash\nhexo g\n```\n```bash\nhexo d\n```\n然后会有提示输入Github的用户名，输入Github的账户密码 点击login即可更新同步。\n如果期间出现了问题，执行hexo g的时候出现错误,可能是没有安装hexo-deployer-git 在命令行输入\n```bash\nnmp install hexo-deployer-git --save\n```\n再执行一次前两个命令即可\n若又出现 something's wrong....\n```bash\nRun\n    git config --global user.email\"you@example.com\"\n    git config   global user.name\"Your Name\"\n    ...\n```\n则分别复制 把\"\"里的提示词分别改成你的邮件和用户名即可，注意是你申请github时用的邮件和用户名。\n然后回车再输入开始的两个操作，输入hexo -d会有一个github的登录界面，登录即可。\n\n再回到你的github博客网址刷新就可以看到你编写的博客啦。","tags":["hexo"],"categories":["hexo"]},{"title":"hello-world","url":"/2020/04/04/hello-world/","content":"---\nHELLO WORLD\n---\nWelcome to [My blogs](https://HP1020.github.io/)!\n\n```bash\ncout<<\"hello world\"<<endl;\n```"}]